{"version":3,"sources":["src/state/game/definitions.ts","src/state/lib/state.ts","src/peer.ts","src/id.ts","src/state/game/actions.ts","src/state/game/selectors.ts","node_modules/peerjs/dist sync","src/state/index.ts","node_modules/once/once.js","node_modules/wrappy/wrappy.js","src/CastButton.web.tsx","src/screens/Game/Game.tsx"],"names":["Peer","Record","name","team","peersFromJSON","json","Object","keys","reduce","peers","id","set","peerFromJSON","Map","Card","text","cardFromJSON","cardsFromJSON","cards","List","map","Game","teams","fromJSON","STORE_NAME","INITIAL_STATE","gameSyncAction","createActionWithPayload","gameSetNameAction","gameSetTeamAction","gameSetTeamNameAction","state","State","gameName","game","gameFromJSON","useMapStateToProps","createConnect","createHook","APP_PEER_ID","none","PEER","emitter","EventEmitter","getPeer","Promise","resolve","ifSome","ifNone","once","usePeer","useState","toJS","peer","setPeer","useEffect","then","a","async","getAppId","getId","appPeerId","create","PeerJS","on","error","console","replace","emit","init","CHARS","PREFIX","randomId","size","range","iter","charAt","Math","floor","random","length","toArray","join","getIdFromAppId","appId","substring","AsyncStorage","getItem","setItem","store","getStore","updatePeer","updater","update","get","setStatePeerName","setStatePeerTeam","setStateTeamName","setStatePeers","merge","gameSetTeamName","debounce","setTeamName","broadcast","gameSetPeerName","setPeerName","gameSetPeerTeam","setPeerTeam","reducer","action","is","payload","selectPeers","selectTeams","send","getCurrent","webpackEmptyContext","req","e","Error","code","module","exports","dispatch","createDispatcher","mergeReducers","wrappy","fn","f","called","value","apply","this","arguments","onceStrict","onceError","strict","proto","defineProperty","Function","prototype","configurable","cb","TypeError","forEach","k","wrapper","args","Array","i","ret","CastButton","props","injectGoogleCast","View","window","__onGCastApiAvailable","available","reason","cast","framework","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","chrome","AutoJoinPolicy","ORIGIN_SCOPED","script","document","createElement","src","body","appendChild","styles","StyleSheet","castButton","position","right","top","width","height","log","style"],"mappings":"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","file":"static/js/5.8af8c9aa.chunk.js","sourcesContent":["import { IJSONObject } from \"@aicacia/json\";\nimport { createActionWithPayload } from \"@aicacia/state\";\nimport { Map, List, Record, RecordOf } from \"immutable\";\n\nexport interface IPeer {\n  name: string;\n  team: number;\n}\n\nexport const Peer = Record<IPeer>({\n  name: \"\",\n  team: 0,\n});\n\nexport function peerFromJSON(json: IJSONObject): RecordOf<IPeer> {\n  return Peer({\n    name: json.name as string,\n    team: json.team as number,\n  });\n}\n\nexport function peersFromJSON(json: IJSONObject) {\n  return Object.keys(json).reduce(\n    (peers, id) => peers.set(id, peerFromJSON(json[id] as IJSONObject)),\n    Map<string, RecordOf<IPeer>>()\n  );\n}\n\nexport interface ICard {\n  text: string;\n}\n\nexport const Card = Record<ICard>({\n  text: \"\",\n});\n\nexport function cardFromJSON(json: IJSONObject): RecordOf<ICard> {\n  return Card({\n    text: json.text as string,\n  });\n}\n\nexport function cardsFromJSON(json: IJSONObject) {\n  return Object.keys(json).reduce(\n    (cards, id) =>\n      cards.set(id, List((json[id] as Array<IJSONObject>).map(cardFromJSON))),\n    Map<string, List<RecordOf<ICard>>>()\n  );\n}\n\nexport interface IGame {\n  peers: Map<string, RecordOf<IPeer>>;\n  teams: List<string>;\n  cards: Map<string, List<RecordOf<ICard>>>;\n}\n\nexport const Game = Record<IGame>({\n  peers: Map(),\n  teams: List([\"Team 1\", \"Team 2\"]),\n  cards: Map(),\n});\n\nexport function fromJSON(json: IJSONObject): RecordOf<IGame> {\n  return Game({\n    peers: peersFromJSON(json.peers as IJSONObject),\n    teams: List(json.teams as Array<string>),\n    cards: cardsFromJSON(json.cards as IJSONObject),\n  });\n}\n\nexport const STORE_NAME = \"game\";\nexport const INITIAL_STATE = Game();\n\nexport const gameSyncAction = createActionWithPayload<{\n  peers: {\n    [key: string]: IPeer;\n  };\n  cards: {\n    [key: string]: Array<ICard>;\n  };\n}>(`${STORE_NAME}.sync`);\nexport const gameSetNameAction = createActionWithPayload<{\n  id: string;\n  name: string;\n}>(`${STORE_NAME}.set-name`);\nexport const gameSetTeamAction = createActionWithPayload<{\n  id: string;\n  team: number;\n}>(`${STORE_NAME}.set-team`);\nexport const gameSetTeamNameAction = createActionWithPayload<{\n  team: number;\n  name: string;\n}>(`${STORE_NAME}.set-team-name`);\n","import { initReduxDevTools, IStateTypeOf, State } from \"@aicacia/state\";\nimport { createHook, createConnect } from \"@aicacia/state-react\";\nimport {\n  fromJSON as gameFromJSON,\n  INITIAL_STATE as game,\n  STORE_NAME as gameName,\n} from \"../game/definitions\";\n\nexport const state = new State(\n  {\n    [gameName]: game,\n  },\n  {\n    [gameName]: gameFromJSON,\n  }\n);\nexport type IState = IStateTypeOf<typeof state>;\n\nexport const connect = createConnect(state);\n\nexport const useMapStateToProps = createHook(state);\n\nif (process.env.NODE_ENV !== \"production\") {\n  initReduxDevTools(state);\n}\n","import { none, Option } from \"@aicacia/core\";\nimport { Peer } from \"@aicacia/peer\";\nimport { useEffect, useState } from \"react\";\nimport { EventEmitter } from \"events\";\nimport PeerJS from \"peerjs\";\nimport { getId, getAppId } from \"./id\";\n\nexport const APP_PEER_ID: Option<string> = none(),\n  PEER: Option<Peer> = none();\n\nconst emitter = new EventEmitter();\n\nexport function getPeerId() {\n  return new Promise<string>((resolve) =>\n    APP_PEER_ID.ifSome(resolve).ifNone(() => emitter.once(\"peer-id\", resolve))\n  );\n}\n\nexport function getPeer() {\n  return new Promise<Peer>((resolve) =>\n    PEER.ifSome(resolve).ifNone(() => emitter.once(\"peer\", resolve))\n  );\n}\n\nexport function usePeer() {\n  const [peer, setPeer] = useState(PEER.toJS());\n\n  useEffect(() => {\n    if (peer === null) {\n      getPeer().then(setPeer);\n    }\n  }, [peer]);\n\n  return peer;\n}\n\nexport function usePeerId() {\n  const [peerId, setPeerId] = useState(APP_PEER_ID.toJS());\n\n  useEffect(() => {\n    if (peerId === null) {\n      getPeerId().then(setPeerId);\n    }\n  }, [peerId]);\n\n  return peerId;\n}\n\nasync function init() {\n  const appPeerId = getAppId(await getId()),\n    peer = await Peer.create(new PeerJS(appPeerId));\n\n  peer.on(\"error\", (error) => {\n    console.error(error);\n  });\n\n  APP_PEER_ID.replace(appPeerId);\n  PEER.replace(peer);\n\n  emitter.emit(\"peer-id\", appPeerId);\n  emitter.emit(\"peer\", peer);\n}\n\ninit();\n","import { range } from \"@aicacia/core\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ID_KEY = \"ID\",\n  CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  PREFIX = \"fishbowl-aicacia-com-\";\n\nfunction randomId(size = 6) {\n  return range(0, size)\n    .iter()\n    .map(() => CHARS.charAt(Math.floor(Math.random() * CHARS.length)))\n    .toArray()\n    .join(\"\");\n}\n\nexport function getAppId(id: string) {\n  return PREFIX + id;\n}\n\nexport function getIdFromAppId(appId: string) {\n  return appId.substring(PREFIX.length);\n}\n\nexport async function getId(size = 6) {\n  let id = await AsyncStorage.getItem(ID_KEY);\n\n  if (id) {\n    return id;\n  } else {\n    id = randomId(size);\n    await AsyncStorage.setItem(ID_KEY, id);\n    return id;\n  }\n}\n","import {\n  gameSetNameAction,\n  gameSetTeamAction,\n  gameSetTeamNameAction,\n  gameSyncAction,\n  IGame,\n  IPeer,\n  Peer,\n  peersFromJSON,\n  STORE_NAME,\n} from \"./definitions\";\nimport { state } from \"../lib/state\";\nimport { getPeer } from \"../../peer\";\nimport { debounce } from \"@aicacia/debounce\";\nimport { Map, RecordOf } from \"immutable\";\nimport { IAction } from \"@aicacia/state\";\n\nexport const store = state.getStore(STORE_NAME);\n\nfunction updatePeer(\n  state: RecordOf<IGame>,\n  id: string,\n  updater: (peer: RecordOf<IPeer>) => RecordOf<IPeer>\n) {\n  return state.update(\"peers\", (peers) => {\n    const peer = peers.get(id, Peer());\n    return peers.set(id, updater(peer));\n  });\n}\n\nfunction setStatePeerName(state: RecordOf<IGame>, id: string, name: string) {\n  return updatePeer(state, id, (peer) => peer.set(\"name\", name));\n}\n\nexport function setPeerName(id: string, name: string) {\n  store.update((state) => setStatePeerName(state, id, name));\n}\n\nfunction setStatePeerTeam(state: RecordOf<IGame>, id: string, team: number) {\n  return updatePeer(state, id, (peer) => peer.set(\"team\", team));\n}\n\nexport function setPeerTeam(id: string, team: number) {\n  store.update((state) => setStatePeerTeam(state, id, team));\n}\n\nfunction setStateTeamName(state: RecordOf<IGame>, team: number, name: string) {\n  return state.update(\"teams\", (teams) => teams.set(team, name));\n}\n\nexport function setTeamName(team: number, name: string) {\n  store.update((state) => setStateTeamName(state, team, name));\n}\n\nfunction setStatePeers(\n  state: RecordOf<IGame>,\n  peers: Map<string, RecordOf<IPeer>>\n) {\n  return state.update(\"peers\", (state) => state.merge(peers));\n}\n\nexport function setPeers(peers: Map<string, RecordOf<IPeer>>) {\n  store.update((state) => setStatePeers(state, peers));\n}\n\nexport const gameSetTeamName = debounce((team: number, name: string) => {\n  setTeamName(team, name);\n  getPeer().then((peer) =>\n    peer.broadcast(gameSetTeamNameAction.create({ team, name }))\n  );\n}, 500);\n\nexport const gameSetPeerName = debounce((id: string, name: string) => {\n  setPeerName(id, name);\n  getPeer().then((peer) =>\n    peer.broadcast(gameSetNameAction.create({ id, name }))\n  );\n}, 500);\n\nexport function gameSetPeerTeam(id: string, team: number) {\n  setPeerTeam(id, team);\n  getPeer().then((peer) =>\n    peer.broadcast(gameSetTeamAction.create({ id, team }))\n  );\n}\n\nexport function reducer(\n  state: RecordOf<IGame>,\n  action: IAction\n): RecordOf<IGame> {\n  if (gameSetNameAction.is(action)) {\n    return setStatePeerName(state, action.payload.id, action.payload.name);\n  } else if (gameSetTeamAction.is(action)) {\n    return setStatePeerTeam(state, action.payload.id, action.payload.team);\n  } else if (gameSetTeamNameAction.is(action)) {\n    return setStateTeamName(state, action.payload.team, action.payload.name);\n  } else if (gameSyncAction.is(action)) {\n    return setStatePeers(state, peersFromJSON(action.payload.peers as any));\n  } else {\n    return state;\n  }\n}\n\ngetPeer().then((peer) => {\n  peer.on(\"connection\", (id) => {\n    peer.send(id, gameSyncAction.create(store.getCurrent().toJS()));\n  });\n});\n","import { Map, RecordOf, List } from \"immutable\";\nimport { IState } from \"../lib/state\";\nimport { IPeer, Peer, STORE_NAME } from \"./definitions\";\n\nexport function selectPeers(state: IState): Map<string, RecordOf<IPeer>> {\n  return state[STORE_NAME].peers;\n}\n\nexport function selectPeer(state: IState, id: string): RecordOf<IPeer> {\n  return state[STORE_NAME].peers.get(id, Peer());\n}\n\nexport function selectTeams(state: IState): List<string> {\n  return state[STORE_NAME].teams;\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 919;","import { createDispatcher, mergeReducers } from \"@aicacia/state\";\nimport { getPeer } from \"../peer\";\nimport * as game from \"./game\";\nimport { state, useMapStateToProps, connect } from \"./lib/state\";\nexport type { IState } from \"./lib/state\";\n\nexport const dispatch = createDispatcher(\n  state,\n  mergeReducers({\n    [game.STORE_NAME]: game.reducer,\n  })\n);\n\ngetPeer().then((peer) => {\n  peer.on(\"message\", dispatch);\n});\n\nexport { state, useMapStateToProps, connect };\nexport { game };\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","import React from \"react\";\nimport once from \"once\";\nimport { View } from \"react-native\";\nimport { Props } from \"react-native-google-cast/lib/typescript/src/components/CastButton\";\nimport { receiverApplicationId } from \"../app.json\";\n\nexport default function CastButton(props: Props) {\n  const GoogleCastLancher: any = \"google-cast-launcher\";\n\n  injectGoogleCast();\n\n  return (\n    <View {...props}>\n      <GoogleCastLancher />\n    </View>\n  );\n}\n\nconst injectGoogleCast = once(() => {\n  const onGCastApiAvailable = (available: boolean, reason: string) => {\n    if (available) {\n      cast.framework.CastContext.getInstance().setOptions({\n        receiverApplicationId,\n        autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n      });\n    } else {\n      console.error(reason);\n    }\n  };\n\n  window.__onGCastApiAvailable = onGCastApiAvailable as (\n    available: boolean\n  ) => void;\n\n  const script = document.createElement(\"script\");\n  script.src =\n    \"//www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\";\n  document.body.appendChild(script);\n});\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\nimport { GAME_SCREEN, ParamList } from \"../../navigationConfig\";\nimport CastButton from \"../../CastButton\";\nimport { selectPeers, selectTeams } from \"../../state/game\";\nimport { useMapStateToProps } from \"../../state\";\nimport { usePeer } from \"../../peer\";\n\nconst styles = StyleSheet.create({\n  castButton: {\n    position: \"absolute\",\n    right: 8,\n    top: 8,\n    width: 32,\n    height: 32,\n  },\n});\n\nexport function Game(props: ParamList[typeof GAME_SCREEN]) {\n  const peer = usePeer(),\n    peers = useMapStateToProps(selectPeers),\n    teams = useMapStateToProps(selectTeams);\n\n  console.log(peer, peers, teams);\n\n  return (\n    <View>\n      <Text>Hello, world {props.id}!</Text>\n      <CastButton style={styles.castButton} />\n    </View>\n  );\n}\n"],"sourceRoot":""}