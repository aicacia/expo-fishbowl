{"version":3,"sources":["src/state/game/definitions.ts","src/state/lib/state.ts","src/id.ts","src/peer.ts","src/state/game/actions.ts","src/state/game/selectors.ts","node_modules/peerjs/dist sync","src/state/index.ts","node_modules/once/once.js","node_modules/wrappy/wrappy.js","src/CastButton.web.tsx","src/screens/Game/Game.tsx"],"names":["Peer","Record","name","team","peersFromJSON","json","Object","keys","reduce","peers","id","set","peerFromJSON","Map","GameState","Card","text","cardFromJSON","cardsFromJSON","cards","List","map","teamsFromJSON","teams","Game","state","None","0","1","fromJSON","STORE_NAME","INITIAL_STATE","syncAction","createActionWithPayload","setStateAction","setNameAction","setTeamAction","setTeamNameAction","updatePeer","updater","update","get","reducer","action","is","payload","peer","mergeDeep","State","gameName","game","gameFromJSON","useMapStateToProps","createConnect","createHook","dispatch","createDispatcher","mergeReducers","gameReducer","getPeer","then","on","CHARS","PREFIX","randomId","size","range","iter","charAt","Math","floor","random","length","toArray","join","getAppId","getIdFromAppId","appId","substring","getId","a","async","AsyncStorage","getItem","setItem","APP_PEER_ID","none","PEER","emitter","EventEmitter","Promise","resolve","ifSome","ifNone","once","usePeer","useState","toJS","setPeer","useEffect","appPeerId","create","PeerJS","error","console","replace","emit","init","lobby","Lobby","broadcast","start","Started","setTeamName","debounce","setPeerName","setPeerTeam","selectState","selectPeers","selectTeams","gameState","getCurrent","send","webpackEmptyContext","req","e","Error","code","module","exports","wrappy","fn","f","called","value","apply","this","arguments","onceStrict","onceError","strict","proto","defineProperty","Function","prototype","configurable","cb","TypeError","forEach","k","wrapper","args","Array","i","ret","CastButton","props","injectGoogleCast","View","window","__onGCastApiAvailable","available","reason","cast","framework","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","chrome","AutoJoinPolicy","ORIGIN_SCOPED","script","document","createElement","src","body","appendChild","styles","StyleSheet","castButton","position","right","top","width","height","useMemo","connect","JSON","stringify","style"],"mappings":"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","file":"static/js/6.ab97d3eb.chunk.js","sourcesContent":["import { IJSONObject } from \"@aicacia/json\";\nimport { createActionWithPayload, IAction } from \"@aicacia/state\";\nimport { Map, List, Record, RecordOf } from \"immutable\";\n\nexport interface IPeer {\n  name: string;\n  team: number;\n}\n\nexport const Peer = Record<IPeer>({\n  name: \"\",\n  team: 0,\n});\n\nexport function peerFromJSON(json: IJSONObject): RecordOf<IPeer> {\n  return Peer({\n    name: json.name as string,\n    team: json.team as number,\n  });\n}\n\nexport function peersFromJSON(json: IJSONObject) {\n  return Object.keys(json).reduce(\n    (peers, id) => peers.set(id, peerFromJSON(json[id] as IJSONObject)),\n    Map<string, RecordOf<IPeer>>()\n  );\n}\n\nexport interface ICard {\n  text: string;\n}\n\nexport const Card = Record<ICard>({\n  text: \"\",\n});\n\nexport function cardFromJSON(json: IJSONObject): RecordOf<ICard> {\n  return Card({\n    text: json.text as string,\n  });\n}\n\nexport function cardsFromJSON(json: IJSONObject) {\n  return Object.keys(json).reduce(\n    (cards, id) =>\n      cards.set(id, List((json[id] as Array<IJSONObject>).map(cardFromJSON))),\n    Map<string, List<RecordOf<ICard>>>()\n  );\n}\n\nexport function teamsFromJSON(json: IJSONObject) {\n  return Object.keys(json).reduce(\n    (teams, team) => teams.set(+team, json[team] as string),\n    Map<number, string>()\n  );\n}\n\nexport enum GameState {\n  None,\n  Lobby,\n  Started,\n  Finish,\n}\n\nexport interface IGame {\n  state: GameState;\n  peers: Map<string, RecordOf<IPeer>>;\n  teams: Map<number, string>;\n  cards: Map<string, List<RecordOf<ICard>>>;\n}\n\nexport const Game = Record<IGame>({\n  state: GameState.None,\n  peers: Map(),\n  teams: teamsFromJSON({ 0: \"Team 1\", 1: \"Team 2\" }),\n  cards: Map(),\n});\n\nexport function fromJSON(json: IJSONObject): RecordOf<IGame> {\n  return Game({\n    state: json.state as GameState,\n    peers: peersFromJSON(json.peers as IJSONObject),\n    teams: teamsFromJSON(json.teams as IJSONObject),\n    cards: cardsFromJSON(json.cards as IJSONObject),\n  });\n}\n\nexport const STORE_NAME = \"game\";\nexport const INITIAL_STATE = Game();\n\nexport const syncAction = createActionWithPayload<IJSONObject>(\n  `${STORE_NAME}.sync`\n);\n\nexport const setStateAction = createActionWithPayload<GameState>(\n  `${STORE_NAME}.set-state`\n);\n\nexport const setNameAction = createActionWithPayload<{\n  id: string;\n  name: string;\n}>(`${STORE_NAME}.set-name`);\n\nexport const setTeamAction = createActionWithPayload<{\n  id: string;\n  team: number;\n}>(`${STORE_NAME}.set-team`);\n\nexport const setTeamNameAction = createActionWithPayload<{\n  team: number;\n  name: string;\n}>(`${STORE_NAME}.set-team-name`);\n\nfunction updatePeer(\n  state: RecordOf<IGame>,\n  id: string,\n  updater: (peer: RecordOf<IPeer>) => RecordOf<IPeer>\n) {\n  return state.update(\"peers\", (peers) =>\n    peers.set(id, updater(peers.get(id) || Peer()))\n  );\n}\n\nexport function reducer(\n  state: RecordOf<IGame>,\n  action: IAction\n): RecordOf<IGame> {\n  if (setNameAction.is(action)) {\n    return updatePeer(state, action.payload.id, (peer) =>\n      peer.set(\"name\", action.payload.name)\n    );\n  } else if (setTeamAction.is(action)) {\n    return updatePeer(state, action.payload.id, (peer) =>\n      peer.set(\"team\", action.payload.team)\n    );\n  } else if (setTeamNameAction.is(action)) {\n    return state.update(\"teams\", (teams) =>\n      teams.set(action.payload.team, action.payload.name)\n    );\n  } else if (syncAction.is(action)) {\n    return state.mergeDeep(fromJSON(action.payload));\n  } else if (setStateAction.is(action)) {\n    return state.set(\"state\", action.payload);\n  } else {\n    return state;\n  }\n}\n","import {\n  initReduxDevTools,\n  IStateTypeOf,\n  State,\n  createDispatcher,\n  mergeReducers,\n} from \"@aicacia/state\";\nimport { createHook, createConnect } from \"@aicacia/state-react\";\nimport {\n  fromJSON as gameFromJSON,\n  INITIAL_STATE as game,\n  STORE_NAME as gameName,\n  reducer as gameReducer,\n} from \"../game/definitions\";\nimport { getPeer } from \"../../peer\";\n\nexport const state = new State(\n  {\n    [gameName]: game,\n  },\n  {\n    [gameName]: gameFromJSON,\n  }\n);\nexport type IState = IStateTypeOf<typeof state>;\n\nexport const connect = createConnect(state);\n\nexport const useMapStateToProps = createHook(state);\n\nexport const dispatch = createDispatcher(\n  state,\n  mergeReducers({\n    [gameName]: gameReducer,\n  })\n);\n\ngetPeer().then((peer) => {\n  peer.on(\"message\", dispatch);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  initReduxDevTools(state);\n}\n","import { range } from \"@aicacia/core\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ID_KEY = \"ID\",\n  CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  PREFIX = \"fishbowl-aicacia-com-\";\n\nfunction randomId(size = 6) {\n  return range(0, size)\n    .iter()\n    .map(() => CHARS.charAt(Math.floor(Math.random() * CHARS.length)))\n    .toArray()\n    .join(\"\");\n}\n\nexport function getAppId(id: string) {\n  return PREFIX + id;\n}\n\nexport function getIdFromAppId(appId: string) {\n  return appId.substring(PREFIX.length);\n}\n\nexport async function getId(size = 6) {\n  let id = await AsyncStorage.getItem(ID_KEY);\n\n  if (id) {\n    return id;\n  } else {\n    id = randomId(size);\n    await AsyncStorage.setItem(ID_KEY, id);\n    return id;\n  }\n}\n","import { none, Option } from \"@aicacia/core\";\nimport { Peer } from \"@aicacia/peer\";\nimport { useEffect, useState } from \"react\";\nimport { EventEmitter } from \"events\";\nimport PeerJS from \"peerjs\";\nimport { getId, getAppId } from \"./id\";\n\nexport const APP_PEER_ID: Option<string> = none(),\n  PEER: Option<Peer> = none();\n\nconst emitter = new EventEmitter();\n\nexport function getPeerId() {\n  return new Promise<string>((resolve) =>\n    APP_PEER_ID.ifSome(resolve).ifNone(() => emitter.once(\"peer-id\", resolve))\n  );\n}\n\nexport function getPeer() {\n  return new Promise<Peer>((resolve) =>\n    PEER.ifSome(resolve).ifNone(() => emitter.once(\"peer\", resolve))\n  );\n}\n\nexport function usePeer() {\n  const [peer, setPeer] = useState(PEER.toJS());\n\n  useEffect(() => {\n    if (peer === null) {\n      getPeer().then(setPeer);\n    }\n  }, [peer]);\n\n  return peer;\n}\n\nexport function usePeerId() {\n  const [peerId, setPeerId] = useState(APP_PEER_ID.toJS());\n\n  useEffect(() => {\n    if (peerId === null) {\n      getPeerId().then(setPeerId);\n    }\n  }, [peerId]);\n\n  return peerId;\n}\n\nasync function init() {\n  const appPeerId = getAppId(await getId()),\n    peer = await Peer.create(new PeerJS(appPeerId));\n\n  peer.on(\"error\", (error) => {\n    console.error(error);\n  });\n\n  APP_PEER_ID.replace(appPeerId);\n  PEER.replace(peer);\n\n  emitter.emit(\"peer-id\", appPeerId);\n  emitter.emit(\"peer\", peer);\n}\n\ninit();\n","import {\n  setNameAction,\n  setTeamAction,\n  setTeamNameAction,\n  setStateAction,\n  syncAction,\n  GameState,\n} from \"./definitions\";\nimport { dispatch, state } from \"../lib/state\";\nimport { getPeer } from \"../../peer\";\nimport { debounce } from \"@aicacia/debounce\";\nimport { getIdFromAppId } from \"../../id\";\n\nexport function lobby() {\n  const action = setStateAction.create(GameState.Lobby);\n  dispatch(action);\n  getPeer().then((peer) => peer.broadcast(action));\n}\n\nexport function start() {\n  const action = setStateAction.create(GameState.Started);\n  dispatch(action);\n  getPeer().then((peer) => peer.broadcast(action));\n}\n\nexport const setTeamName = debounce((team: number, name: string) => {\n  const action = setTeamNameAction.create({ team, name });\n  dispatch(action);\n  getPeer().then((peer) => peer.broadcast(action));\n}, 500);\n\nexport const setPeerName = debounce((id: string, name: string) => {\n  const action = setNameAction.create({ id, name });\n  dispatch(action);\n  getPeer().then((peer) => peer.broadcast(action));\n}, 500);\n\nexport function setPeerTeam(id: string, team: number) {\n  const action = setTeamAction.create({ id, team });\n  dispatch(action);\n  getPeer().then((peer) => peer.broadcast(action));\n}\n\ngetPeer().then((peer) => {\n  setPeerName(peer.getId(), getIdFromAppId(peer.getId()));\n\n  peer.on(\"connection\", (id) => {\n    const gameState = state.getCurrent().game;\n\n    if (gameState.state !== GameState.None) {\n      peer.send(id, syncAction.create(gameState.toJS() as any));\n    }\n  });\n});\n","import { Map, RecordOf, List } from \"immutable\";\nimport { IState } from \"../lib/state\";\nimport { IPeer, Peer, GameState, STORE_NAME } from \"./definitions\";\n\nexport function selectState(state: IState): GameState {\n  return state[STORE_NAME].state;\n}\n\nexport function selectPeers(state: IState): Map<string, RecordOf<IPeer>> {\n  return state[STORE_NAME].peers;\n}\n\nexport function selectPeer(state: IState, id: string): RecordOf<IPeer> {\n  return state[STORE_NAME].peers.get(id, Peer());\n}\n\nexport function selectTeams(state: IState): List<string> {\n  return state[STORE_NAME].teams;\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 925;","import * as game from \"./game\";\nimport { state, useMapStateToProps, connect } from \"./lib/state\";\nexport type { IState } from \"./lib/state\";\n\nexport { state, useMapStateToProps, connect };\nexport { game };\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","import React from \"react\";\nimport once from \"once\";\nimport { View } from \"react-native\";\nimport { Props } from \"react-native-google-cast/lib/typescript/src/components/CastButton\";\nimport { receiverApplicationId } from \"../app.json\";\n\nexport default function CastButton(props: Props) {\n  const GoogleCastLancher: any = \"google-cast-launcher\";\n\n  injectGoogleCast();\n\n  return (\n    <View {...props}>\n      <GoogleCastLancher />\n    </View>\n  );\n}\n\nconst injectGoogleCast = once(() => {\n  const onGCastApiAvailable = (available: boolean, reason: string) => {\n    if (available) {\n      cast.framework.CastContext.getInstance().setOptions({\n        receiverApplicationId,\n        autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n      });\n    } else {\n      console.error(reason);\n    }\n  };\n\n  window.__onGCastApiAvailable = onGCastApiAvailable as (\n    available: boolean\n  ) => void;\n\n  const script = document.createElement(\"script\");\n  script.src =\n    \"//www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\";\n  document.body.appendChild(script);\n});\n","import React, { useMemo } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\nimport { GAME_SCREEN, ParamList } from \"../../navigationConfig\";\nimport CastButton from \"../../CastButton\";\nimport {\n  GameState,\n  selectPeers,\n  selectState,\n  selectTeams,\n  start,\n} from \"../../state/game\";\nimport { useMapStateToProps } from \"../../state\";\nimport { usePeer } from \"../../peer\";\nimport { getAppId } from \"../../id\";\n\nconst styles = StyleSheet.create({\n  castButton: {\n    position: \"absolute\",\n    right: 8,\n    top: 8,\n    width: 32,\n    height: 32,\n  },\n});\n\nexport function Game(props: ParamList[typeof GAME_SCREEN]) {\n  const peer = usePeer(),\n    state = useMapStateToProps(selectState),\n    peers = useMapStateToProps(selectPeers),\n    teams = useMapStateToProps(selectTeams);\n\n  if (state !== GameState.Started) {\n    start();\n  }\n\n  useMemo(async () => {\n    const appPeerId = getAppId(props.id);\n\n    if (peer) {\n      if (appPeerId !== peer.getId()) {\n        try {\n          await peer.connect(appPeerId);\n        } catch (_) {}\n      }\n    }\n  }, [peer, props.id]);\n\n  return (\n    <View>\n      <Text>{`My Id ${peer?.getId()}`}</Text>\n      <Text>{`Peers ${JSON.stringify(peers, null, 2)}`}</Text>\n      <Text>{`Teams ${JSON.stringify(teams, null, 2)}`}</Text>\n      <CastButton style={styles.castButton} />\n    </View>\n  );\n}\n"],"sourceRoot":""}