{"version":3,"sources":["src/peer.ts","src/id.ts","node_modules/peerjs/dist sync","src/screens/Home/Home.tsx"],"names":["APP_PEER_ID","none","PEER","emitter","EventEmitter","getPeer","Promise","resolve","ifSome","ifNone","once","usePeer","useState","toJS","peer","setPeer","useEffect","then","a","async","getAppId","getId","appPeerId","Peer","create","PeerJS","on","error","console","replace","emit","init","CHARS","PREFIX","randomId","size","range","iter","map","charAt","Math","floor","random","length","toArray","join","id","getIdFromAppId","appId","substring","AsyncStorage","getItem","setItem","webpackEmptyContext","req","e","Error","code","keys","module","exports","styles","StyleSheet","startNewGame","marginTop","Home","_props","gameId","setGameId","navigation","useNavigation","value","onChangeText","disabled","onPress","navigate","LOBBY_SCREEN","style"],"mappings":"6PAOaA,EAA8BC,iBACzCC,EAAqBD,iBAEjBE,EAAU,IAAIC,eAQb,SAASC,IACd,OAAO,IAAIC,SAAc,SAACC,GAAD,OACvBL,EAAKM,OAAOD,GAASE,QAAO,kBAAMN,EAAQO,KAAK,OAAQH,SAIpD,SAASI,IAAW,IAAD,EACAC,mBAASV,EAAKW,QADd,WACjBC,EADiB,KACXC,EADW,KASxB,OANAC,qBAAU,WACK,OAATF,GACFT,IAAUY,KAAKF,KAEhB,CAACD,IAEGA,GAeT,qBAAAI,EAAAC,OAAA,4DACoBC,IADpB,WAAAF,EAAA,MACmCG,eADnC,0BACQC,GADR,yBAAAJ,EAAA,MAEiBK,OAAKC,OAAO,IAAIC,IAAOH,KAFxC,QAEIR,EAFJ,QAIOY,GAAG,SAAS,SAACC,GAChBC,QAAQD,MAAMA,MAGhB3B,EAAY6B,QAAQP,GACpBpB,EAAK2B,QAAQf,GAEbX,EAAQ2B,KAAK,UAAWR,GACxBnB,EAAQ2B,KAAK,OAAQhB,GAZvB,6DAeAiB,I,8KC3DEC,EAAQ,uCACRC,EAAS,wBAEX,SAASC,IAAoB,IAAXC,EAAU,uDAAH,EACvB,OAAOC,gBAAM,EAAGD,GACbE,OACAC,KAAI,kBAAMN,EAAMO,OAAOC,KAAKC,MAAMD,KAAKE,SAAWV,EAAMW,YACxDC,UACAC,KAAK,IAGH,SAASzB,EAAS0B,GACvB,OAAOb,EAASa,EAGX,SAASC,EAAeC,GAC7B,OAAOA,EAAMC,UAAUhB,EAAOU,QAGzB,SAAetB,IAAf,6BAAAH,EAAAC,OAAA,uDAAqBgB,EAArB,+BAA4B,EAA5B,WAAAjB,EAAA,MACUgC,IAAaC,QArBf,OAoBR,YACDL,EADC,iDAIIA,GAJJ,cAMHA,EAAKZ,EAASC,GANX,YAAAjB,EAAA,MAOGgC,IAAaE,QA3BR,KA2BwBN,IAPhC,iCAQIA,GARJ,+D,kBCvBP,SAASO,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoB9C,QAAU8C,EAC9BM,EAAOC,QAAUP,EACjBA,EAAoBP,GAAK,K,0KCAnBe,EAASC,IAAWtC,OAAO,CAC/BuC,aAAc,CACZC,UAAW,MAIR,SAASC,EAAKC,GAAwC,IAAD,EAC9BtD,mBAAS,IADqB,WACnDuD,EADmD,KAC3CC,EAD2C,KAExDtD,EAAOH,cACP0D,EAAaC,0BAEf,OACE,kBAAC,IAAD,KACE,kBAAC,QAAD,CAAOC,MAAOJ,EAAQK,aAAcJ,IACpC,kBAAC,SAAD,CACEK,UAAWN,EAAOxB,OAClB+B,QAAS,kBAAML,EAAWM,SAASC,IAAc,CAAE9B,GAAIqB,MAFzD,aAMCrD,GACC,kBAAC,SAAD,CACE+D,MAAOhB,EAAOE,aACdW,QAAS,kBACPL,EAAWM,SAASC,IAAc,CAChC9B,GAAIC,YAAejC,EAAKO,aAJ9B","file":"static/js/7.4ff232cd.chunk.js","sourcesContent":["import { none, Option } from \"@aicacia/core\";\nimport { Peer } from \"@aicacia/peer\";\nimport { useEffect, useState } from \"react\";\nimport { EventEmitter } from \"events\";\nimport PeerJS from \"peerjs\";\nimport { getId, getAppId } from \"./id\";\n\nexport const APP_PEER_ID: Option<string> = none(),\n  PEER: Option<Peer> = none();\n\nconst emitter = new EventEmitter();\n\nexport function getPeerId() {\n  return new Promise<string>((resolve) =>\n    APP_PEER_ID.ifSome(resolve).ifNone(() => emitter.once(\"peer-id\", resolve))\n  );\n}\n\nexport function getPeer() {\n  return new Promise<Peer>((resolve) =>\n    PEER.ifSome(resolve).ifNone(() => emitter.once(\"peer\", resolve))\n  );\n}\n\nexport function usePeer() {\n  const [peer, setPeer] = useState(PEER.toJS());\n\n  useEffect(() => {\n    if (peer === null) {\n      getPeer().then(setPeer);\n    }\n  }, [peer]);\n\n  return peer;\n}\n\nexport function usePeerId() {\n  const [peerId, setPeerId] = useState(APP_PEER_ID.toJS());\n\n  useEffect(() => {\n    if (peerId === null) {\n      getPeerId().then(setPeerId);\n    }\n  }, [peerId]);\n\n  return peerId;\n}\n\nasync function init() {\n  const appPeerId = getAppId(await getId()),\n    peer = await Peer.create(new PeerJS(appPeerId));\n\n  peer.on(\"error\", (error) => {\n    console.error(error);\n  });\n\n  APP_PEER_ID.replace(appPeerId);\n  PEER.replace(peer);\n\n  emitter.emit(\"peer-id\", appPeerId);\n  emitter.emit(\"peer\", peer);\n}\n\ninit();\n","import { range } from \"@aicacia/core\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ID_KEY = \"ID\",\n  CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  PREFIX = \"fishbowl-aicacia-com-\";\n\nfunction randomId(size = 6) {\n  return range(0, size)\n    .iter()\n    .map(() => CHARS.charAt(Math.floor(Math.random() * CHARS.length)))\n    .toArray()\n    .join(\"\");\n}\n\nexport function getAppId(id: string) {\n  return PREFIX + id;\n}\n\nexport function getIdFromAppId(appId: string) {\n  return appId.substring(PREFIX.length);\n}\n\nexport async function getId(size = 6) {\n  let id = await AsyncStorage.getItem(ID_KEY);\n\n  if (id) {\n    return id;\n  } else {\n    id = randomId(size);\n    await AsyncStorage.setItem(ID_KEY, id);\n    return id;\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 919;","import React, { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Input, Button } from \"@ui-kitten/components\";\nimport { HOME_SCREEN, LOBBY_SCREEN, ParamList } from \"../../navigationConfig\";\nimport { usePeer } from \"../../peer\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { getIdFromAppId } from \"../../id\";\n\nconst styles = StyleSheet.create({\n  startNewGame: {\n    marginTop: 32,\n  },\n});\n\nexport function Home(_props: ParamList[typeof HOME_SCREEN]) {\n  const [gameId, setGameId] = useState(\"\"),\n    peer = usePeer(),\n    navigation = useNavigation();\n\n  return (\n    <View>\n      <Input value={gameId} onChangeText={setGameId} />\n      <Button\n        disabled={!gameId.length}\n        onPress={() => navigation.navigate(LOBBY_SCREEN, { id: gameId })}\n      >\n        Join Game\n      </Button>\n      {peer && (\n        <Button\n          style={styles.startNewGame}\n          onPress={() =>\n            navigation.navigate(LOBBY_SCREEN, {\n              id: getIdFromAppId(peer.getId()),\n            })\n          }\n        >\n          Start New Game\n        </Button>\n      )}\n    </View>\n  );\n}\n"],"sourceRoot":""}